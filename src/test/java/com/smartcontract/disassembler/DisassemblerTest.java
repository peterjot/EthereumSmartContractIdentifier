package com.smartcontract.disassembler;

import org.junit.Test;

import java.util.Arrays;
import java.util.List;
import java.util.Set;

import static com.smartcontract.bytecode.BytecodeService.FOUR_BYTES_MASK;
import static com.smartcontract.bytecode.BytecodeService.PUSH_4_MNEMONIC;
import static com.smartcontract.disassembler.Opcode.PUSH4;
import static java.util.stream.Collectors.toList;
import static org.hamcrest.core.IsEqual.equalTo;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThat;

public class DisassemblerTest {

    private static final String MOCK_BYTE_CODE = "8060405234801561001057600080fd5b506100396020604051908101604052806000815250610068640100000000026401000000009004565b610063600060206040519081016040528060008152506101b3640100000000026401000000009004565b6103f2565b610070610325565b6000602060405190810160405280848152509150600160038390806001815401808255809150509060018203906000526020600020016000909192909190915060008201518160000190805190602001906100cc929190610339565b5050500390506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055507f7694d63d2563aeac8aad2b0a111ef1ba09b12b9748ef4ae1010584d554b87fea81600033604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1505050565b6101bb6103b9565b600060206040519081016040528084815250915060016004839080600181540180825580915050906001820390600052602060002001600090919290919091506000820151816000019080519060200190610217929190610339565b50505003905060016000858152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550336002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7694d63d2563aeac8aad2b0a111ef1ba09b12b9748ef4ae1010584d554b87fea848233604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a150505050565b602060405190810160405280606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061037a57805160ff19168380011785556103a8565b828001600101855582156103a8579182015b828111156103a757825182559160200191906001019061038c565b5b5090506103b591906103cd565b5090565b602060405190810160405280606081525090565b6103ef91905b808211156103eb5760008160009055506001016103d3565b5090565b90565b6109dd806104016000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806309787a2c146100935780630b1e7f831461010657806310fdf92a146101ac57806323bcaae9146102195780635a9cfac8146102825780638ebb4c15146102b1578063acdc2cde14610357578063cd65eabe146103b8575b600080fd5b34801561009f57600080fd5b5061010460048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610403565b005b34801561011257600080fd5b5061013160048036038101908080359060200190929190505050610575565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610171578082015181840152602081019050610156565b50505050905090810190601f16801561019e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b857600080fd5b506101d760048036038101908080359060200190929190505050610636565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022557600080fd5b50610280600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610669565b005b34801561028e57600080fd5b506102976107b4565b604051808215151515815260200191505060405180910390f35b3480156102bd57600080fd5b506102dc600480360381019080803590602001909291905050506107c3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561031c578082015181840152602081019050610301565b50505050905090810190601f1680156103495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561036357600080fd5b506103a2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610884565b6040518082815260200191505060405180910390f35b3480156103c457600080fd5b506103ed60048036038101908080359060200190929190803590602001909291905050506108b4565b6040518082815260200191505060405180910390f35b61040b6108e4565b6000602060405190810160405280848152509150600160048390806001815401808255809150509060018203906000526020600020016000909192909190915060008201518160000190805190602001906104679291906108f8565b50505003905060016000858152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550336002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7694d63d2563aeac8aad2b0a111ef1ba09b12b9748ef4ae1010584d554b87fea848233604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a150505050565b60038181548110151561058457fe5b90600052602060002001600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561062c5780601f106106015761010080835404028352916020019161062c565b820191906000526020600020905b81548152906001019060200180831161060f57829003601f168201915b5050505050905081565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610671610978565b6000602060405190810160405280848152509150600160038390806001815401808255809150509060018203906000526020600020016000909192909190915060008201518160000190805190602001906106cd9291906108f8565b5050500390506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055507f7694d63d2563aeac8aad2b0a111ef1ba09b12b9748ef4ae1010584d554b87fea81600033604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1505050565b60008060038054905011905090565b6004818154811015156107d257fe5b90600052602060002001600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561087a5780601f1061084f5761010080835404028352916020019161087a565b820191906000526020600020905b81548152906001019060200180831161085d57829003601f168201915b5050505050905081565b60006020528160005260406000208181548110151561089f57fe5b90600052602060002001600091509150505481565b6001602052816000526040600020818154811015156108cf57fe5b90600052602060002001600091509150505481565b602060405190810160405280606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061093957805160ff1916838001178555610967565b82800160010185558215610967579182015b8281111561096657825182559160200191906001019061094b565b5b509050610974919061098c565b5090565b602060405190810160405280606081525090565b6109ae91905b808211156109aa576000816000905550600101610992565b5090565b905600a165627a7a723058203bb3e6f109f74f237f6237094c198d52cd13f61b23717cf61feba7267df14c320029";

    private final Disassembler disassembler = new Disassembler();

    @Test
    public void shouldReturnAllPush4Instructions() {
        //given
        List<Instruction> expectedInstruction = Arrays.asList(
                new Instruction(PUSH4, "ffffffff"),
                new Instruction(PUSH4, "09787a2c"),
                new Instruction(PUSH4, "0b1e7f83"),
                new Instruction(PUSH4, "10fdf92a"),
                new Instruction(PUSH4, "23bcaae9"),
                new Instruction(PUSH4, "5a9cfac8"),
                new Instruction(PUSH4, "8ebb4c15"),
                new Instruction(PUSH4, "acdc2cde"),
                new Instruction(PUSH4, "cd65eabe")
        );

        //when
        Set<Instruction> actualInstructions = disassembler.disassembly(MOCK_BYTE_CODE);
        List<Instruction> actualPush4Instructions = actualInstructions
                .stream()
                .filter(instruction -> instruction.getOpcode().equals(Opcode.PUSH4))
                .collect(toList());

        //then
        assertThat(actualPush4Instructions.size(), equalTo(9));
        assertThat(actualPush4Instructions, equalTo(expectedInstruction));
    }

    @Test
    public void shouldReturnAllInstructions() {
        //given
        int instructionsCount = 162;
        //when
        Set<Instruction> actualInstructions = disassembler.disassembly(MOCK_BYTE_CODE);

        //then
        assertThat(actualInstructions.size(), equalTo(instructionsCount));
    }

    @Test
    public void in20structions() {
        //given
        String line = "608060405260586006556001600760006101000a81548160ff0219169083151502179055506001600760016101000a81548160ff02191690831515021790555034801561004b57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550601260ff16600a0a633b9aca0002600181905550601260ff16600a0a633b9aca00026000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef601260ff16600a0a633b9aca00026040518082815260200191505060405180910390a36125ed8061015d6000396000f30060806040526004361061016a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630604c5941461025357806306fdde03146102aa578063095ea7b31461033a5780630f529ba21461039f57806318160ddd146103ca57806323b872dd146103f55780632ff2e9dc1461047a578063313ce567146104a557806342966c68146104d657806342f6208e146105035780634cd412d51461053e5780635fc3a3121461056d57806366188463146105c45780636b1ea8d21461062957806370a082311461067c5780637b3e5e7b146106d35780638620410b146106fe5780638da5cb5b1461072957806391b7f5ed1461078057806395d89b41146107ad5780639d3c4c681461083d578063a9059cbb14610890578063ccb07cef146108f5578063d4e17e6d14610924578063d73dd62314610953578063d791de63146109b8578063dd62ed3e146109f3578063ef7ac0e514610a6a575b6000600760009054906101000a900460ff1615151561018857600080fd5b3490506101a081600554610a9990919063ffffffff16565b6005819055506101e7600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336101e260065485610ab590919063ffffffff16565b610aed565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561024f573d6000803e3d6000fd5b5050005b34801561025f57600080fd5b50610294600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d56565b6040518082815260200191505060405180910390f35b3480156102b657600080fd5b506102bf610ddf565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102ff5780820151818401526020810190506102e4565b50505050905090810190601f16801561032c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561034657600080fd5b50610385600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e18565b604051808215151515815260200191505060405180910390f35b3480156103ab57600080fd5b506103b4610fa1565b6040518082815260200191505060405180910390f35b3480156103d657600080fd5b506103df610fac565b6040518082815260200191505060405180910390f35b34801561040157600080fd5b50610460600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fb6565b604051808215151515815260200191505060405180910390f35b34801561048657600080fd5b5061048f611075565b6040518082815260200191505060405180910390f35b3480156104b157600080fd5b506104ba611086565b604051808260ff1660ff16815260200191505060405180910390f35b3480156104e257600080fd5b506105016004803603810190808035906020019092919050505061108b565b005b34801561050f57600080fd5b5061053c600480360381019080803590602001908201803590602001919091929391929390505050611098565b005b34801561054a57600080fd5b506105536111ee565b604051808215151515815260200191505060405180910390f35b34801561057957600080fd5b506105ae600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611201565b6040518082815260200191505060405180910390f35b3480156105d057600080fd5b5061060f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611219565b604051808215151515815260200191505060405180910390f35b34801561063557600080fd5b5061067a6004803603810190808035906020019082018035906020019190919293919293908035906020019082018035906020019190919293919293905050506114aa565b005b34801561068857600080fd5b506106bd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115b7565b6040518082815260200191505060405180910390f35b3480156106df57600080fd5b506106e86115ff565b6040518082815260200191505060405180910390f35b34801561070a57600080fd5b50610713611605565b6040518082815260200191505060405180910390f35b34801561073557600080fd5b5061073e61160b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561078c57600080fd5b506107ab60048036038101908080359060200190929190505050611631565b005b3480156107b957600080fd5b506107c2611697565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108025780820151818401526020810190506107e7565b50505050905090810190601f16801561082f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561084957600080fd5b5061088e6004803603810190808035906020019082018035906020019190919293919293908035906020019082018035906020019190919293919293905050506116d0565b005b34801561089c57600080fd5b506108db600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118e8565b604051808215151515815260200191505060405180910390f35b34801561090157600080fd5b5061090a6119a5565b604051808215151515815260200191505060405180910390f35b34801561093057600080fd5b506109516004803603810190808035151590602001909291905050506119b8565b005b34801561095f57600080fd5b5061099e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a31565b604051808215151515815260200191505060405180910390f35b3480156109c457600080fd5b506109f1600480360381019080803590602001908201803590602001919091929391929390505050611c2d565b005b3480156109ff57600080fd5b50610a54600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d1c565b6040518082815260200191505060405180910390f35b348015610a7657600080fd5b50610a97600480360381019080803515159060200190929190505050611da3565b005b60008183019050828110151515610aac57fe5b80905092915050565b600080831415610ac85760009050610ae7565b8183029050818382811515610ad957fe5b04141515610ae357fe5b8090505b92915050565b806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610b3a57600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401111515610bc657600080fd5b610c17816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e1c90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610caa816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a9990919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054039050919050565b6040805190810160405280600481526020017f6c656e730000000000000000000000000000000000000000000000000000000081525081565b6000808214158015610ea757506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15610eb157600080fd5b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b601260ff16600a0a81565b6000600154905090565b6000600760019054906101000a900460ff161515610fd357600080fd5b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054031015151561106157600080fd5b61106c848484611e35565b90509392505050565b601260ff16600a0a633b9aca000281565b601281565b61109533826121ef565b50565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110f657600080fd5b600090505b828290508110156111e957600080848484818110151561111757fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460046000858585818110151561118157fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806001019150506110fb565b505050565b600760019054906101000a900460ff1681565b60046020528060005260406000206000915090505481565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508083111561132a576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113be565b61133d8382611e1c90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561150857600080fd5b600090505b848490508110156115b057601260ff16600a0a838383818110151561152e57fe5b905060200201350260046000878785818110151561154857fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808060010191505061150d565b5050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60055481565b60065481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561168d57600080fd5b8060068190555050565b6040805190810160405280600481526020017f6c656e730000000000000000000000000000000000000000000000000000000081525081565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561172f57600080fd5b600091505b858590508210156118e05760046000878785818110151561175157fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054601260ff16600a0a85858581811015156117bf57fe5b9050602002013502116117ef57601260ff16600a0a84848481811015156117e257fe5b905060200201350261185a565b60046000878785818110151561180157fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b90508060046000888886818110151561186f57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508180600101925050611734565b505050505050565b6000600760019054906101000a900460ff16151561190557600080fd5b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054031015151561199357600080fd5b61199d83836123a2565b905092915050565b600760009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a1457600080fd5b80600760006101000a81548160ff02191690831515021790555050565b6000611ac282600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a9990919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611c8b57600080fd5b600090505b82829050811015611d17576000600460008585858181101515611caf57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080600101915050611c90565b505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611dff57600080fd5b80600760016101000a81548160ff02191690831515021790555050565b6000828211151515611e2a57fe5b818303905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611e7257600080fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515611ebf57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515611f4a57600080fd5b611f9b826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e1c90919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061202e826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a9990919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506120ff82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e1c90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561223c57600080fd5b61228d816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e1c90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506122e481600154611e1c90919063ffffffff16565b6001819055508173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040518082815260200191505060405180910390a2600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156123df57600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561242c57600080fd5b61247d826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e1c90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612510826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a9990919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050929150505600a165627a7a72305820c7e0682f0f7af4134c2ea6ee7d03056b34a535125f57b43cdf78b110263af1d40029";
        List<String> expectedSelectors = Arrays.asList(
                "3b9aca00", "0604c594", "06fdde03", "095ea7b3", "0f529ba2", "18160ddd", "23b872dd", "2ff2e9dc",
                "313ce567", "42966c68", "42f6208e", "4cd412d5", "5fc3a312", "66188463", "6b1ea8d2", "70a08231", "7b3e5e7b",
                "8620410b", "8da5cb5b", "91b7f5ed", "95d89b41", "9d3c4c68", "a9059cbb", "ccb07cef", "d4e17e6d", "d73dd623",
                "d791de63", "dd62ed3e", "ef7ac0e5"
        );
        //when
        final Set<Instruction> disassembly = disassembler.disassembly(line);

        //then
        final List<String> collect = disassembly
                .stream()
                .filter(instruction -> instruction.hasMnemonic(PUSH_4_MNEMONIC) && !instruction.getHexParameters().equals(FOUR_BYTES_MASK))
                .map(Instruction::getHexParameters).collect(toList());
        System.out.println(collect);
        assertEquals(expectedSelectors, collect);
    }
}